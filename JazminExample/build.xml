<?xml version="1.0" encoding="utf-8"?>
<project name="JazminExample" basedir="." 
	xmlns:ivy="antlib:fr.jayasoft.ivy.ant"
	default="all">
	<!-- scp task-->   
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>
	<!-- -->    
	<property name="project.root" value="${basedir}" />
	<property file="build.properties" />
	<!-- build no.-->
	<tstamp>
		<format property="release_date" pattern="yyyyMMddHHmm" />
	</tstamp>
	<!-- src dir-->
	<property name="src.dir" value="${project.root}/src" />
	<property name="lib.dir" value="${project.root}/lib" />
	<property name="webroot.dir" value="${project.root}/webroot" />
	
	<!-- build dir -->
	<property name="build.dir" value="${project.root}/build" />
	<property name="build.lib.dir" value="${build.dir}/lib" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<!-- Java CLASSPATH -->
	<path id="master-classpath">
		<fileset dir="${lib.dir}" />
	</path>
	<!-- =================================================================== -->
	<!-- clean release directory -->
	<!-- =================================================================== -->
	<target name="clean" description="clean all">
		<delete dir="${release.dir}" />
		<delete dir="${build.dir}" />
	</target>


	<!-- =================================================================== -->
	<!-- create build directory -->
	<!-- =================================================================== -->
	<target name="init" depends="get-lib" description="">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
	</target>

	<!-- =================================================================== -->
	<!-- compile java code -->
	<!-- =================================================================== -->
	<target name="build" description="build java" depends="init">
		<javac destdir="${build.classes.dir}" 
			source="1.8" target="1.8" 
			debug="true" encoding="utf-8" 
			deprecation="false" 
			optimize="false"
			failonerror="true">
			<src path="${src.dir}" />
			<classpath refid="master-classpath" />
		</javac>
	</target>
	<!-- =================================================================== -->
	<!-- make jar file -->
	<!-- =================================================================== -->
	<target name="jar" description="" depends="build">
	    <copy todir="${build.classes.dir}">
	        <fileset dir="${src.dir}">
              <include name="**/*.json" />
          </fileset>	
		</copy>
		<!--copy source file -->
		<jar destfile="${release.dir}/${project.name}.jar">
			<fileset dir="${build.classes.dir}">
				<include name="**/*" />
			</fileset>
			<manifest>
				<attribute name="Implementation-Version" 
					value="build${release_date}"/>
				<attribute name="Implementation-Title" value="${project.name}"/>			
			</manifest>
		</jar>
	</target>
	<!-- =================================================================== -->
	<!-- make release package -->
	<!-- =================================================================== -->
	<target name="package" depends="jar">
		<echo>make jaz package</echo>
		<delete dir="${release.dir}/${project.name}" />
		<mkdir dir="${release.dir}/${project.name}" />
		<unzip dest="${release.dir}/${project.name}">
		    <fileset dir="${lib.dir}">
		        <include name="**/*.jar"/>
		    	<exclude name="jazmin.jar"/>
		    	<exclude name="vaadin.jar"/>
		    </fileset>
			<fileset dir="${release.dir}">
				<include name="*.jar"/>
			</fileset>			
		</unzip>
	</target>	
	
	<target name="package-RpcSystem" depends="package">
			<zip destfile="${release.dir}/RpcSystem-${project.revision}.jaz">
					<fileset dir="${release.dir}/${project.name}">
						<include name="**/*" />
					</fileset>
			</zip>
	</target>
	<!-- =================================================================== -->
	<!-- deoloy to remote server -->
	<!-- =================================================================== -->
		
	<target name="deploy" depends="package-RpcSystem">
		<echo>deploy to ${deploy.dir} from ${release.dir}</echo>
		<scp todir="${deploy.dir}"
			trust="true">
			<fileset dir="${release.dir}">
				<include name="*.jaz" />
			</fileset>
		</scp>
	</target>	
	<!-- =================================================================== -->
	<!-- 部署项目 发布jar包 -->
	<!-- =================================================================== -->    
	<target name="repo" depends="jar">
		<echo>publish to ${publish.dir} from ${release.dir}</echo>	
		<scp file="${release.dir}/${project.name}.jar" 
			remoteTofile="${publish.dir}/${project.name}-${project.revision}.jar"
				trust="true">
		</scp>
	</target>
	
	<!-- =================================================================== -->
	<!-- 部署项目 发布jar包 -->
	<!-- =================================================================== -->    
	<target name="all" depends="clean-libcache,clean,deploy,repo">
		<echo>build all</echo>
	</target>
	
	<!-- =================================================================== -->
	<!-- init ivy -->
	<!-- =================================================================== -->    
	<target name="init-lib">
		<ivy:configure file="${ivy.config.path}"/>
	</target>
	<!-- =================================================================== -->
    <!-- clean ivy lib cache -->
    <!-- =================================================================== -->
    <target name="clean-libcache" depends="init-lib" description="clean ivy lib cache">
    	<ivy:cleancache/>
    </target>

	<!-- =================================================================== -->
    <!-- get ivy lib -->
    <!-- =================================================================== -->
	<target name="get-lib"  depends="init-lib"
		description="下载或从本地缓存获取第三方包">
	    <ivy:retrieve pattern="${lib.dir}/[artifact](-[classifier]).[ext]" />
    </target>
</project>
